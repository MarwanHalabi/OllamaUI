{"uid":"881ce90db31602b4","name":"Test home endpoint","fullName":"tests.test_example.ExampleTestCase#test_page_title","historyId":"1f00af4742c2562b8d24e8127e7405ec","time":{"start":1755590062143,"stop":1755590063296,"duration":1153},"description":"Description............","descriptionHtml":"<p>Description............</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.InvalidArgumentException: Message: binary is not a Firefox executable","statusTrace":"self = <tests.test_example.ExampleTestCase testMethod=test_page_title>\n\n    def setUp(self):\n>       self.driver = get_driver()\n                      ^^^^^^^^^^^^\n\ntests/test_example.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ndriver_factory.py:48: in get_driver\n    return DriverFactory().create_driver()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndriver_factory.py:17: in create_driver\n    return self._create_firefox_driver()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndriver_factory.py:41: in _create_firefox_driver\n    d = webdriver.Firefox(options=opts)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/firefox/webdriver.py:72: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:263: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:366: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1566b87510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"binary is not a Firefox executable\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: binary is not a Firefox executable\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidArgumentException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":13,"retriesStatusChange":true,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ExampleTestCase","time":{"start":1755590062142,"stop":1755590062143,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_unittest_setUpClass_fixture_ExampleTestCase::0","time":{"start":1755590063352,"stop":1755590063352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"owner","value":"API Team"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_example"},{"name":"subSuite","value":"ExampleTestCase"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"4446-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_example"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"TMS-456","url":"TMS-456","type":"tms"},{"name":"AUTH-123","url":"AUTH-123","type":"issue"},{"name":"Website","url":"https://dev.example.com/","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"API Team","retries":[{"uid":"bf294a7f36a067cb","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: binary is not a Firefox executable","time":{"start":1755590028185,"stop":1755590029355,"duration":1170}},{"uid":"4e13524a12544a6c","status":"broken","statusDetails":"selenium.common.exceptions.InvalidArgumentException: Message: binary is not a Firefox executable","time":{"start":1755590028027,"stop":1755590029174,"duration":1147}},{"uid":"6014ce5917950a76","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=139.0.7258.66)\nStacktrace:\n#0 0x5569cfb4e05a <unknown>\n#1 0x5569cf5eda70 <unknown>\n#2 0x5569cf5e4cf1 <unknown>\n#3 0x5569cf5d6099 <unknown>\n#4 0x5569cf5d7de0 <unknown>\n#5 0x5569cf5d643e <unknown>\n#6 0x5569cf5d5daa <unknown>\n#7 0x5569cf5d5a85 <unknown>\n#8 0x5569cf5d38ee <unknown>\n#9 0x5569cf5d40ca <unknown>\n#10 0x5569cf5f0f99 <unknown>\n#11 0x5569cf68bd65 <unknown>\n#12 0x5569cf6653e2 <unknown>\n#13 0x5569cf68b14f <unknown>\n#14 0x5569cf6651b3 <unknown>\n#15 0x5569cf63159b <unknown>\n#16 0x5569cf632971 <unknown>\n#17 0x5569cfb1322b <unknown>\n#18 0x5569cfb16f79 <unknown>\n#19 0x5569cfafa309 <unknown>\n#20 0x5569cfb17b28 <unknown>\n#21 0x5569cfadebef <unknown>\n#22 0x5569cfb3b0e8 <unknown>\n#23 0x5569cfb3b2c6 <unknown>\n#24 0x5569cfb4d036 <unknown>\n#25 0x7fe16a69caa4 <unknown>\n#26 0x7fe16a729c3c <unknown>","time":{"start":1755589977165,"stop":1755590011454,"duration":34289}},{"uid":"e19edebf164440de","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=139.0.7258.66)\nStacktrace:\n#0 0x561ac830305a <unknown>\n#1 0x561ac7da2a70 <unknown>\n#2 0x561ac7d99cf1 <unknown>\n#3 0x561ac7d8b099 <unknown>\n#4 0x561ac7d8cde0 <unknown>\n#5 0x561ac7d8b43e <unknown>\n#6 0x561ac7d8adaa <unknown>\n#7 0x561ac7d8aa85 <unknown>\n#8 0x561ac7d888ee <unknown>\n#9 0x561ac7d890ca <unknown>\n#10 0x561ac7da5f99 <unknown>\n#11 0x561ac7e40d65 <unknown>\n#12 0x561ac7e1a3e2 <unknown>\n#13 0x561ac7e4014f <unknown>\n#14 0x561ac7e1a1b3 <unknown>\n#15 0x561ac7de659b <unknown>\n#16 0x561ac7de7971 <unknown>\n#17 0x561ac82c822b <unknown>\n#18 0x561ac82cbf79 <unknown>\n#19 0x561ac82af309 <unknown>\n#20 0x561ac82ccb28 <unknown>\n#21 0x561ac8293bef <unknown>\n#22 0x561ac82f00e8 <unknown>\n#23 0x561ac82f02c6 <unknown>\n#24 0x561ac8302036 <unknown>\n#25 0x7fb5ef29caa4 <unknown>\n#26 0x7fb5ef329c3c <unknown>","time":{"start":1755589960552,"stop":1755589970251,"duration":9699}},{"uid":"e7e1e7eddfeb9e4e","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=139.0.7258.66)\nStacktrace:\n#0 0x557edfbb605a <unknown>\n#1 0x557edf655a70 <unknown>\n#2 0x557edf64ccf1 <unknown>\n#3 0x557edf63e099 <unknown>\n#4 0x557edf63fde0 <unknown>\n#5 0x557edf63e43e <unknown>\n#6 0x557edf63ddaa <unknown>\n#7 0x557edf63da85 <unknown>\n#8 0x557edf63b8ee <unknown>\n#9 0x557edf63c0ca <unknown>\n#10 0x557edf658f99 <unknown>\n#11 0x557edf6f3d65 <unknown>\n#12 0x557edf6cd3e2 <unknown>\n#13 0x557edf6f314f <unknown>\n#14 0x557edf6cd1b3 <unknown>\n#15 0x557edf69959b <unknown>\n#16 0x557edf69a971 <unknown>\n#17 0x557edfb7b22b <unknown>\n#18 0x557edfb7ef79 <unknown>\n#19 0x557edfb62309 <unknown>\n#20 0x557edfb7fb28 <unknown>\n#21 0x557edfb46bef <unknown>\n#22 0x557edfba30e8 <unknown>\n#23 0x557edfba32c6 <unknown>\n#24 0x557edfbb5036 <unknown>\n#25 0x7fccaf49caa4 <unknown>\n#26 0x7fccaf529c3c <unknown>","time":{"start":1755589959587,"stop":1755589975800,"duration":16213}},{"uid":"22a74cecba31acaf","status":"passed","time":{"start":1755588974749,"stop":1755588975661,"duration":912}},{"uid":"7557fd0a1b10e849","status":"passed","time":{"start":1755588955946,"stop":1755588958400,"duration":2454}},{"uid":"f80dbea19ec625f4","status":"passed","time":{"start":1755585408569,"stop":1755585409465,"duration":896}},{"uid":"870d5d68961cbde0","status":"passed","time":{"start":1755585395956,"stop":1755585396929,"duration":973}},{"uid":"196e6e30c4681ea2","status":"passed","time":{"start":1755585365913,"stop":1755585366797,"duration":884}},{"uid":"699dae2134d54806","status":"passed","time":{"start":1755585347638,"stop":1755585348517,"duration":879}},{"uid":"6ec325ece4ebe9c6","status":"passed","time":{"start":1755585232828,"stop":1755585233704,"duration":876}},{"uid":"611443722aac7a5d","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=139.0.7258.128)\nStacktrace:\n0   chromedriver                        0x0000000100d1b26c cxxbridge1$str$ptr + 2741972\n1   chromedriver                        0x0000000100d131dc cxxbridge1$str$ptr + 2709060\n2   chromedriver                        0x000000010085d4fc cxxbridge1$string$len + 90520\n3   chromedriver                        0x0000000100855984 cxxbridge1$string$len + 58912\n4   chromedriver                        0x0000000100848614 cxxbridge1$string$len + 4784\n5   chromedriver                        0x000000010084a014 cxxbridge1$string$len + 11440\n6   chromedriver                        0x0000000100848a68 cxxbridge1$string$len + 5892\n7   chromedriver                        0x00000001008483bc cxxbridge1$string$len + 4184\n8   chromedriver                        0x0000000100848108 cxxbridge1$string$len + 3492\n9   chromedriver                        0x0000000100845ec0 chromedriver + 204480\n10  chromedriver                        0x000000010084691c chromedriver + 207132\n11  chromedriver                        0x0000000100860560 cxxbridge1$string$len + 102908\n12  chromedriver                        0x00000001008e684c cxxbridge1$string$len + 652520\n13  chromedriver                        0x00000001008e5db8 cxxbridge1$string$len + 649812\n14  chromedriver                        0x0000000100898d30 cxxbridge1$string$len + 334284\n15  chromedriver                        0x0000000100cde66c cxxbridge1$str$ptr + 2493140\n16  chromedriver                        0x0000000100ce18a0 cxxbridge1$str$ptr + 2505992\n17  chromedriver                        0x0000000100cbf4a4 cxxbridge1$str$ptr + 2365708\n18  chromedriver                        0x0000000100ce215c cxxbridge1$str$ptr + 2508228\n19  chromedriver                        0x0000000100cb059c cxxbridge1$str$ptr + 2304516\n20  chromedriver                        0x0000000100d01c78 cxxbridge1$str$ptr + 2638048\n21  chromedriver                        0x0000000100d01e04 cxxbridge1$str$ptr + 2638444\n22  chromedriver                        0x0000000100d12e28 cxxbridge1$str$ptr + 2708112\n23  libsystem_pthread.dylib             0x000000018fb57c0c _pthread_start + 136\n24  libsystem_pthread.dylib             0x000000018fb52b80 thread_start + 8","time":{"start":1755584906778,"stop":1755584909563,"duration":2785}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"881ce90db31602b4.json","parameterValues":[]}